private void ValidateRequiredColumns(DataTable dt, List<ColumnMapping> colMappings, string fileType, string filePath)
{
    var requiredCols = colMappings
        .Where(m => m.IsRequired)
        .Select(m => m.IncomingColumn)
        .ToList();

    foreach (var col in requiredCols)
    {
        bool found = dt.Columns.Cast<DataColumn>()
                        .Any(c => string.Equals(c.ColumnName, col, StringComparison.OrdinalIgnoreCase));
        if (!found)
            throw new Exception($"Missing required column in {fileType} file: {col} in {filePath}");
    }
}

private void RemoveEmptyRows(DataTable dt)
{
    if (dt.Rows.Count > 0)
    {
        var nonEmptyRows = dt.AsEnumerable()
            .Where(row => row.ItemArray.Any(cell =>
                cell != null && !string.IsNullOrWhiteSpace(cell.ToString())));

        dt = nonEmptyRows.Any() ? nonEmptyRows.CopyToDataTable() : dt.Clone();
    }
}

private void AddSourceFileNameColumn(DataTable dt, string filePath)
{
    if (!dt.Columns.Contains("SourceFileName"))
        dt.Columns.Add("SourceFileName", typeof(string));
    foreach (DataRow row in dt.Rows)
        row["SourceFileName"] = Path.GetFileName(filePath);
}
