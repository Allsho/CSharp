private void ValidateRequiredColumns(DataTable dt, List<ColumnMapping> colMappings, string fileType, string filePath)
{
    // Step 1: Get all required target columns
    var requiredTargets = colMappings
        .Where(m => m.IsRequired)
        .Select(m => m.TargetColumn)
        .Distinct(StringComparer.OrdinalIgnoreCase)
        .ToList();

    foreach (var requiredTarget in requiredTargets)
    {
        // Step 2: Get all possible source columns that map to this target
        var incomingAliases = colMappings
            .Where(m => string.Equals(m.TargetColumn, requiredTarget, StringComparison.OrdinalIgnoreCase))
            .Select(m => m.IncomingColumn)
            .ToList();

        // Step 3: Check if at least one of these aliases is present in the actual file
        bool found = incomingAliases.Any(alias =>
            dt.Columns.Contains(alias));

        if (!found)
        {
            throw new Exception($"Missing required column mapping for target '{requiredTarget}' in {fileType} file: {filePath}");
        }
    }
}
