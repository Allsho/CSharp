private DataTable ReadCsv(string filePath, string delimiter, List<ColumnMapping> colMappings, string connStr)
{
    DataTable dt = new DataTable();
    string sourceFileName = Path.GetFileName(filePath);

    using (StreamReader sr = new StreamReader(filePath))
    {
        string headerLine = sr.ReadLine();
        if (headerLine == null) throw new Exception("CSV file is empty.");

        bool isQuotedSingleColumn = !headerLine.Contains(delimiter) && headerLine.StartsWith("\"") && headerLine.EndsWith("\"");

        if (isQuotedSingleColumn)
        {
            string header = headerLine.Trim().Trim('"');
            dt.Columns.Add(header);
            dt.Columns.Add("SourceFileName");

            while (!sr.EndOfStream)
            {
                string line = sr.ReadLine()?.Trim().Trim('"');
                if (!string.IsNullOrWhiteSpace(line))
                {
                    DataRow row = dt.NewRow();
                    row[header] = line;
                    row["SourceFileName"] = sourceFileName;
                    dt.Rows.Add(row);
                }
            }
        }
        else
        {
            string[] headers = headerLine.Split(delimiter.ToCharArray());
            foreach (string header in headers)
                dt.Columns.Add(header.Trim('"'));

            dt.Columns.Add("SourceFileName");

            // ✅ Moved outside the loop
            ValidateRequiredColumns(dt, colMappings, "CSV", filePath);

            while (!sr.EndOfStream)
            {
                string[] values = sr.ReadLine()?.Split(delimiter.ToCharArray());
                if (values != null && values.Any(v => !string.IsNullOrWhiteSpace(v)))
                {
                    if (values.Length > headers.Length)
                    {
                        LogError(connStr, "CSV Format Warning", $"Too many values in line of {sourceFileName}, Truncating extras.");
                    }

                    DataRow row = dt.NewRow();
                    for (int i = 0; i < headers.Length; i++)
                    {
                        if (i < values.Length && !string.IsNullOrWhiteSpace(values[i]))
                            row[i] = values[i].Trim('"');
                        else
                            row[i] = DBNull.Value;
                    }
                    row["SourceFileName"] = sourceFileName;
                    dt.Rows.Add(row);
                }
            }
        }
    }

    // ✅ Only once, after all rows have been read
    RemoveEmptyRows(dt);
    AddSourceFileNameColumn(dt, filePath);

    return dt;
}
