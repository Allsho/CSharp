public static string GenerateHtmlSummary(string payerName, Variables vars)
{
    var connStr = vars["User::CM_OLEDB_ClaimsStage"].Value.ToString();
    var sb = new StringBuilder();

    using (var conn = new SqlConnection(connStr))
    {
        conn.Open();

        // Get the most recent processed time
        string latestTimeQuery = @"SELECT MAX(ProcessedAt) 
                                   FROM MoveIt.FileTransferLog
                                   WHERE PayerName = @PayerName";
        DateTime lastProcessedAt;
        using (var cmd = new SqlCommand(latestTimeQuery, conn))
        {
            cmd.Parameters.AddWithValue("@PayerName", payerName);
            var result = cmd.ExecuteScalar();
            lastProcessedAt = result != DBNull.Value ? Convert.ToDateTime(result) : DateTime.MinValue;
        }

        // Pull only records after the latest processed time
        string query = @"SELECT FileName, ActionType, FileSize, Status, ProcessedAt
                         FROM MoveIt.FileTransferLog
                         WHERE PayerName = @PayerName
                           AND ProcessedAt > @LastProcessedAt
                         ORDER BY ProcessedAt ASC";

        using (var cmd = new SqlCommand(query, conn))
        {
            cmd.Parameters.AddWithValue("@PayerName", payerName);
            cmd.Parameters.AddWithValue("@LastProcessedAt", lastProcessedAt);

            using (var reader = cmd.ExecuteReader())
            {
                sb.AppendLine("<h3>File Processing Summary</h3>");
                sb.AppendLine("<table border='1' cellpadding='5' cellspacing='0' style='border-collapse:collapse;'>");
                sb.AppendLine("<tr style='background-color:#f2f2f2;'><th>File Name</th><th>Action</th><th>Size (bytes)</th><th>Status</th><th>ProcessedAt</th></tr>");

                while (reader.Read())
                {
                    sb.AppendLine($"<tr><td>{reader["FileName"]}</td><td>{reader["ActionType"]}</td><td>{reader["FileSize"]}</td><td>{reader["Status"]}</td><td>{reader["ProcessedAt"]}</td></tr>");
                }

                sb.AppendLine("</table>");
            }
        }
    }

    return sb.ToString();
}
