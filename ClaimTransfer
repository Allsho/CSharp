// Main.cs
public void Main()
{
    ConnectionManager smtpConnection = Dts.Connections["CM_SMTP_EXHUB"];
    string smtpServer = smtpConnection.Properties["SmtpServer"].GetValue(smtpConnection).ToString();

    try
    {
        var config = Config.LoadFromVariables(Dts.Variables);

        // Only process files if there are any
        if (config.HasFiles)
        {
            var processor = new FileProcessor(config, new Logger(Dts.Variables), Dts.Variables);
            processor.Execute();
        }

        // Ensure email is only sent once per package execution
        bool emailAlreadySent = false;
        if (Dts.Variables.Contains("User::EmailSent") && Dts.Variables["User::EmailSent"].Value is bool sentFlag)
        {
            emailAlreadySent = sentFlag;
        }

        if (!emailAlreadySent)
        {
            // Get a professional summary from the log table
            var summaryHtml = GetLogSummary.GenerateHtmlSummary(config.PayerName, Dts.Variables);

            var emailer = new Emailer(Dts.Variables);
            emailer.SendEmail(smtpServer, "File Processing Summary", summaryHtml, config.PayerName);

            // Mark that email has been sent
            if (Dts.Variables.Contains("User::EmailSent"))
                Dts.Variables["User::EmailSent"].Value = true;
            else
                Dts.Variables.Add("User::EmailSent", true);
        }

        Dts.TaskResult = (int)ScriptResults.Success;
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error in Main(): {ex.Message}");
        new Logger(Dts.Variables).LogError("Main", ex.Message);
        Dts.TaskResult = (int)ScriptResults.Failure;
    }
}
