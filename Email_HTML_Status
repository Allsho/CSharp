using System;
using System.Data;
using System.Text;
using Microsoft.SqlServer.Dts.Runtime;

public void Main()
{
    // Retrieve the Recordset variable and verify it's not null
    object recordsetObj = Dts.Variables["User::TableInfoRecordset"].Value;

    if (recordsetObj == null)
    {
        Dts.Events.FireError(0, "Script Task", "Recordset is null. Ensure it was populated correctly.", string.Empty, 0);
        Dts.TaskResult = (int)ScriptResults.Failure;
        return;
    }

    // Create a DataTable to load the recordset data
    DataTable dt = new DataTable();

    // Load the recordset data into a DataTable
    System.Collections.IEnumerator enumerator = (recordsetObj as System.Collections.IEnumerable).GetEnumerator();
    bool headersAdded = false;

    // Loop through each row in the recordset
    while (enumerator.MoveNext())
    {
        object[] rowValues = (object[])enumerator.Current;

        // If headers haven't been added, add column headers dynamically
        if (!headersAdded)
        {
            for (int i = 0; i < rowValues.Length; i++)
            {
                dt.Columns.Add("Column" + (i + 1)); // Replace with actual column names if needed
            }
            headersAdded = true;
        }

        // Add the current row to the DataTable
        dt.Rows.Add(rowValues);
    }

    // Build the email body content
    StringBuilder emailBody = new StringBuilder();

    // Add column headers to the email body
    foreach (DataColumn column in dt.Columns)
    {
        emailBody.Append(column.ColumnName + "\t");
    }
    emailBody.AppendLine();

    // Add each row's data to the email body
    foreach (DataRow row in dt.Rows)
    {
        foreach (var item in row.ItemArray)
        {
            emailBody.Append(item.ToString() + "\t");
        }
        emailBody.AppendLine();
    }

    // Set the email body in the SSIS variable
    Dts.Variables["User::EmailBody"].Value = emailBody.ToString();

    Dts.TaskResult = (int)ScriptResults.Success;
}
