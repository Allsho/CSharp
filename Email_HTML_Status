using System;
using System.Text;
using Microsoft.SqlServer.Dts.Runtime;

public void Main()
{
    // Retrieve the recordset variable and ensure it is not null
    object recordsetObj = Dts.Variables["User::TableInfoRecordset"].Value;

    if (recordsetObj == null)
    {
        Dts.Events.FireError(0, "Script Task", "Recordset is null. Ensure it was populated correctly in the Data Flow.", string.Empty, 0);
        Dts.TaskResult = (int)ScriptResults.Failure;
        return;
    }

    // Initialize the StringBuilder for email content
    StringBuilder emailBody = new StringBuilder();

    // Use the enumerator to read rows from the recordset
    var enumerator = ((System.Collections.IEnumerable)recordsetObj).GetEnumerator();

    bool headersAdded = false;

    // Loop through each row in the recordset
    while (enumerator.MoveNext())
    {
        // Get the current row
        object[] row = (object[])enumerator.Current;

        // Add column headers only once
        if (!headersAdded)
        {
            for (int i = 0; i < row.Length; i++)
            {
                emailBody.Append("Column" + (i + 1) + "\t");
            }
            emailBody.AppendLine();
            headersAdded = true;
        }

        // Add row data to email body
        foreach (var item in row)
        {
            emailBody.Append(item?.ToString() + "\t");
        }
        emailBody.AppendLine();
    }

    // Store the email content in the EmailBody variable
    Dts.Variables["User::EmailBody"].Value = emailBody.ToString();

    Dts.TaskResult = (int)ScriptResults.Success;
}
